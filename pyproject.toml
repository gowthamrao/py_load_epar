[project]
name = "py_load_epar"
version = "0.1.0"
description = "A package to load EPAR data from the European Medicines Agency (EMA)."
authors = [
    {name = "Gowtham Rao",email = "rao@ohdsi.org"}
]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
keywords = ["ema", "epar", "pharmacovigilance", "ohdsi"]

[project.urls]
"Homepage" = "https://github.com/gowthamrao/py_load_epar"
"Source" = "https://github.com/gowthamrao/py_load_epar"
"Tracker" = "https://github.com/gowthamrao/py_load_epar/issues"

[tool.poetry]
packages = [{include = "py_load_epar", from = "src"}]
[tool.poetry.dependencies]
python = ">=3.12"
pydantic = ">=2.11.7,<3.0.0"
psycopg2-binary = ">=2.9.10,<3.0.0"
tenacity = ">=9.1.2,<10.0.0"
"python-dotenv" = ">=1.1.1,<2.0.0"
pyyaml = ">=6.0.2,<7.0.0"
pydantic-settings = "^2.0"
requests = ">=2.32.3,<3.0.0"
openpyxl = ">=3.1.4,<4.0.0"
beautifulsoup4 = "^4.13.5"
boto3 = ">=1.34.141,<2.0.0"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.2,<9.0.0"
"pytest-cov" = ">=5.0.0,<6.0.0"
"requests-mock" = ">=1.12.1,<2.0.0"
testcontainers = {version = ">=4.6.0,<5.0.0", python = ">=3.12,<4.0", extras = ["postgres"]}
black = ">=24.4.2,<25.0.0"
ruff = ">=0.5.0,<1.0.0"
mypy = ">=1.10.0,<2.0.0"
types-pyyaml = "^6.0.12.20250822"
pytest-mock = "^3.15.0"
pandas = "^2.2.2"
moto = {extras = ["s3"], version = ">=5.1.1,<6.0.0"}
types-boto3 = ">=1.34.141,<2.0.0"
pytest-timeout = ">=2.3.1,<3.0.0"

[tool.pytest.ini_options]
markers = [
    "integration",
    "timeout",
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "I", "C90"]

[tool.black]
line-length = 88

[tool.mypy]
strict = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
